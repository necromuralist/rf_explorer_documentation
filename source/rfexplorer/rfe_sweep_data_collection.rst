RFE Sweep Data Collection
=========================

The :attr:`RFECommunicator.SweepData <RFExplorer.RFECommunicator.SweepData>` property is an instance of a :class:`RFESweepDataCollection <RFExplorer.RFESweepDataCollection.RFESweepDataCollection>` which aggregates instances of the :class:`RFESweepData <RFExplorer.RFESweepData.RFESweepData>`.

.. uml::

   skinparam monochrome true

   RFECommunicator "1" o- "1" RFESweepDataCollection
   RFESweepDataCollection "1" o-- "*" RFESweepData
   RFECommunicator : RFESweepDataCollection SweepData

The Sweep Data Collection
-------------------------

.. currentmodule:: RFExplorer   
.. autosummary::
   :toctree: autogenerated_api

   RFESweepDataCollection

.. contents::   

The Data Count
--------------

In order to check whether or not new data has arrived you can check the ``Count`` attribute. Since it's a count it's 1-based, unlike an index. One thing you can do is call the ``Dump`` method to dump a CSV-like string to stdout. It lacks time-stamps and has some header information so it might need extra processing later on.

.. currentmodule:: RFExplorer.RFESweepDataCollection
.. autosummary::
   :toctree: autogenerated_api

   RFESweepDataCollection.Count
   RFESweepDataCollection.Dump

.. code::

   if (rf_explorer.SweepData.Count > last_index):
       print(rf_explorer.SweepData.Dump())
       last_index = rf_explorer.SweepData.Count          

Get The Data
------------

Instead of doing a CSV dump you can grab a data-set using the ``GetData`` method. To grab the last data-set decrement the current count by 1.

.. autosummary::
   :toctree: autogenerated_api

   RFESweepDataCollection.Count
   RFESweepDataCollection.GetData

.. code::

   index = rf_explorer.SweepData.Count - 1
   sweep_data = rf_explorer.SweepData.GetData(index)

The ``sweep_data`` will be an instance of :class:`RFESweepData <RFExplorer.RFESweepData.RFESweepData>`.
